@page "/login"
@layout EmptyLayout

@inject AuthenticationService AuthenticationService;
@inject NavigationManager NavigationManager;

<MudContainer Class="mt-3" MaxWidth="MaxWidth.Small">
    <MudForm Model="authorizationModel"
             @ref="mudForm"
             Validation="@(validation.ValidateValue)">
        <MudGrid Class="mt-8" Justify="Justify.FlexEnd">
            <MudItem xs="12">
                <MudText Typo="Typo.h2">
                    Авторизация
                </MudText>

                @if (!canLogin)
                {
                    <MudAlert Severity="Severity.Error"
                              NoIcon="true">
                        Пользователь с введенными данными не найден.
                    </MudAlert>
                }

                <MudTextField @bind-Value="authorizationModel.Login"
                              T="string"
                              InputType="InputType.Text"
                              Label="Логин"
                              ErrorText="Логин указан неверно"
                              For="@(() => authorizationModel.Login)" />

                <MudTextField @bind-Value="authorizationModel.Password"
                              T="string"
                              InputType="InputType.Password"
                              Label="Пароль"
                              ErrorText="Пароль указан неверно"
                              For="@(() => authorizationModel.Password)" />
            </MudItem>

            <MudItem xs="12" Class="d-flex align-center justify-space-between">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           Class="ml-auto"
                           OnClick="@(async () => await Authorize())">
                    Войти
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudForm>
</MudContainer>

@code {

    private MudForm mudForm = new();

    private AuthorizationViewModel authorizationModel = new();

    private AuthorizationValidations validation = new();

    private bool canLogin = true;

    private async Task Authorize()
    {
        await mudForm.Validate();

        if (!mudForm.IsValid)
            return;

        canLogin = await AuthenticationService.Authenticate(authorizationModel);

        if (canLogin)
        {
            NavigationManager.NavigateTo(ClientRoutes.EmployeesPage);
        }

        authorizationModel = new AuthorizationViewModel();
    }

}