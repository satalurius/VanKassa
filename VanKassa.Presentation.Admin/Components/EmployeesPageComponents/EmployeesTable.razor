@inject IEmployeesService EmployeesService;
@inject IMapper Mapper;
<MudTable
    Items="Employees"
    Hover="true"
    Class="ma-3"
    Breakpoint="Breakpoint.Sm"
    LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <EmployeesTableInstrumentsPanel/>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Фото</MudTh>
        <MudTh>Фамилия</MudTh>
        <MudTh>Имя</MudTh>
        <MudTh>Отчество</MudTh>
        <MudTh>Адреса</MudTh>
        <MudTh>Роль</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudImage 
                Src="@context.Photo"
                Alt="Фото сотрудника"
                Fluid="true"
                Width="50"/>
        </MudTd>
        <MudTd>@context.LastName</MudTd>
        <MudTd>@context.FirstName</MudTd>
        <MudTd>@context.Patronymic</MudTd>
        <MudTd>@context.Addresses</MudTd>
        <MudTd>@context.Role</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {

    public IEnumerable<EmployeeViewModel> Employees = new List<EmployeeViewModel>();

    protected override async Task OnInitializedAsync()
    {
        await GetEmployees();
    }

    private async Task GetEmployees()
    {
        var empDto = await EmployeesService.GetEmployeesAsync();

        if (empDto is null)
        {
            // TODO: Сообщение Toast о не найденных данных
            Employees = Array.Empty<EmployeeViewModel>();
            return;
        }
        
        Employees = Mapper.Map<List<EmployeesDbDto>, List<EmployeeViewModel>>(empDto.ToList());
    }

}